//-------------------------------------------------------------------------------------
// Cross-browser
//-------------------------------------------------------------------------------------

// USAGE: @include box-sizing(content-box);
@mixin box-sizing($value: border-box) {
	$prefixes: ("-webkit", "-moz", "-ms");
	@each $prefix in $prefixes {
		#{$prefix}-box-sizing: $value;
	}
	box-sizing: $value;
}

// USAGE: @include box-shadow(none);
@mixin box-shadow($value: none) {
	-webkit-box-shadow: $value;
	        box-shadow: $value;
}

// USAGE: @include opacity(.2);
@mixin opacity($value) {
	$value-ie: $value * 100;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$value-ie})";
	filter: alpha(opacity=$value-ie);
	opacity: $value;
}

// USAGE: @include tab-size(4);
@mixin tab-size($value: 4) {
	-moz-tab-size: $value;
	     tab-size: $value;
}

// USAGE: @include transform(translateY(0));
@mixin transform($value...) {
	$prefixes: ("-webkit", "-moz", "-ms", "-o");
	@each $prefix in $prefixes {
		#{$prefix}-transform: $value;
	}
	transform: $value;
}

// USAGE: @include transition(all 100ms linear);
@mixin transition($value...) {
	$prefixes: ("-webkit", "-moz", "-ms", "-o");
	@each $prefix in $prefixes {
		#{$prefix}-transition: $value;
	}
	transition: $value;
}

//-------------------------------------------------------------------------------------
// Responsive
//-------------------------------------------------------------------------------------

// USAGE: @include breakpoint(bp3) {}
@mixin breakpoint($point) {
	@if $point == bp1 {
		@media only screen and (min-width: $breakpoint-1) { @content; }
	}
	@else if $point == bp2 {
		@media only screen and (min-width: $breakpoint-2) { @content; }
	}
	@else if $point == bp3 {
		@media only screen and (min-width: $breakpoint-3) { @content; }
	}
	@else if $point == bp4 {
		@media only screen and (min-width: $breakpoint-4) { @content; }
	}
	@else if $point == 2x {
		@media print, (-o-min-device-pixel-ratio: 5/4), (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 120dpi) { @content; }
	}
}

//-------------------------------------------------------------------------------------
// Helpers
//-------------------------------------------------------------------------------------

// USAGE: @include anchor($color-link, $color-link-hover, $color-link-active);
@mixin anchor($linkColor: $color-link, $hoverColor: $color-link-hover, $activeColor: $color-link-active) {
	color: $linkColor;
	&:focus,
	&:hover {
		color: $hoverColor;
	}
	&:active {
		color: $activeColor;
	}
}

// USAGE: @include alert($bg-alert-default);
@mixin alert($boxColor: $bgcolor-alert-default) {
	clear: both;
	margin: 1em auto;
	padding: .875em $gutter;
	border: 1px solid darken(desaturate($boxColor, 20%), 10%);
	border-left-width: 6px;
	border-radius: $radius-m;
	background-color: $boxColor;
	color: darken(desaturate($boxColor, 20%), 60%);
	font-family: $font-family-sans;
	p {
		margin: 1em 0 0;
		&:first-child {
			margin-top: 0;
		}
	}
}

// This is called within @mixin btn-flat()
@mixin btn-setup() {
	@include box-shadow(none);
	@include transition(all 100ms linear);
	display: inline-block;
	padding: $btn-padding;
	max-width: 100%;
	width: 100%;
	border: 1px solid transparent;
	border-radius: $btn-radius;
	text-transform: uppercase;
	text-shadow: 0 0 2px rgba(0,0,0,.35);
	font-weight: $btn-font-weight;
	font-family: $btn-font-family;
	line-height: normal;
	cursor: pointer;
	-webkit-appearance: none;
	&,
	&:link,
	&:visited,
	&:focus,
	&:hover,
	&:active {
		text-decoration: none;
	}
	@include breakpoint(bp1) {
		width: auto;
	}
	@include breakpoint(2x) {
		width: auto;
	}
}

// USAGE: @include btn-flat($black, $white);
@mixin btn-flat($btnBgColor: $btn-bgcolor, $btnLinkColor: $btn-color) {
	@include btn-setup();
	border-color: $btnBgColor;
	&,
	&:link,
	&:visited,
	&:focus,
	&:hover,
	&:active {
		color: $btnLinkColor;
	}
	&,
	&:link,
	&:visited {
		border-color: $btnBgColor;
		background: $btnBgColor;
	}
	&:focus,
	&:hover {
		border-color: darken($btnBgColor, 5);
		background: darken($btnBgColor, 5);
	}
	&:active {
		border-color: darken($btnBgColor, 10);
		background: darken($btnBgColor, 10);
	}
}